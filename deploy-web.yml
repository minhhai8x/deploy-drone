---
- name: Deploy web base on Laravel framework
  hosts: nginx
  become: true
  become_user: root
  gather_facts: False
  vars_files:
    - "vars/credentials.yml"
    - "vars/main.yml"
  tasks:
    - name: Pull sources from the repository.
      git: repo={{git_project_repo}} dest={{git_project_root}} version={{git_project_branch}} key_file={{git_ssh_key_file}} accept_hostkey=yes
      notify:
        - restart nginx

    - name: Ensure bash, OpenSSl, and libssl are the latest versions
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - bash
        - openssl
        - libssl-dev
        - libssl-doc
      tags: packages

    - name: Install PostgreSQL
      apt: name={{ item }} update_cache=true state=installed
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-psycopg2
      tags: packages

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes

    - name: Ensure database is created
      sudo_user: postgres
      postgresql_db: name={{drone_postgress_db_name}}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present

    - name: Ensure user has access to the database
      sudo_user: postgres
      postgresql_user: db={{drone_postgress_db_name}}
                   name={{drone_postgress_user}}
                   password={{drone_postgress_password}}
                   priv=ALL
                   state=present

    - name: Ensure user does not have unnecessary privileges
      sudo_user: postgres
      postgresql_user: name={{drone_postgress_user}}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=pr

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
