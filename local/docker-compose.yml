version: '2.0'
services:
  drone-server:
    image: drone/drone:0.5
    ports:
      - "8000:8000"
    networks:
      - drone
    volumes:
      - ./drone-data:/var/lib/drone/
    env_file:
      - ./drone.env
    environment:
      I_UNDERSTAND_I_AM_USING_AN_UNSTABLE_VERSION: "true"
      I_AGREE_TO_FIX_BUGS_AND_NOT_FILE_BUGS: "true"
      DRONE_SERVER_ADDR: ":8000"
      DRONE_DEBUG: "true"
      # CHANGEME: Randomly generate something at least 24 characters long with
      # a password generator.
      DRONE_DATABASE_DRIVER: sqlite3
      DRONE_DATABASE_DATASOURCE: /var/lib/drone/drone.sqlite
      DRONE_OPEN: "false"
      DRONE_ORGS: ""
      # CHANGEME: Replace with Github username(s) to grant admin privs to.
      DRONE_ADMIN_ALL: "false"
      DRONE_GITHUB: "true"
      # CHANGEME: Swap your Github OAuth application's credentials in here.
  drone-agent:
    image: drone/drone:0.5
    command: agent
    depends_on:
      - drone-server
    networks:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./drone.env
    environment:
      I_UNDERSTAND_I_AM_USING_AN_UNSTABLE_VERSION: "true"
      I_AGREE_TO_FIX_BUGS_AND_NOT_FILE_BUGS: "true"
      DRONE_SERVER: ws://drone-server:8000/ws/broker
      DRONE_DEBUG: "true"
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: dbname
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
networks:
  drone:
    driver: bridge
